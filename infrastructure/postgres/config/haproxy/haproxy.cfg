global
    maxconn 4096
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    mode tcp
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option dontlognull
    retries 3
    option redispatch
    maxconn 2000

# HAProxy Statistics
listen stats
    bind *:8080
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE

# PostgreSQL Primary/Standby Load Balancer
listen postgres-cluster
    bind *:5000
    mode tcp
    option tcp-check
    balance first
    
    # Primary server (writes)
    server postgres-primary postgres-primary:5432 check port 5432 inter 1000 rise 2 fall 2 weight 100
    
    # Standby server (reads, failover)
    server postgres-standby postgres-standby:5432 check port 5432 inter 1000 rise 2 fall 2 weight 90 backup

# Read-Only Load Balancer (for analytics and reporting)
listen postgres-readonly
    bind *:5001
    mode tcp
    option tcp-check
    balance roundrobin
    
    # Prefer standby for read-only queries
    server postgres-standby postgres-standby:5432 check port 5432 inter 1000 rise 2 fall 2 weight 100
    server postgres-primary postgres-primary:5432 check port 5432 inter 1000 rise 2 fall 2 weight 50 backup

# PgBouncer Load Balancer (Connection Pooling)
listen pgbouncer-cluster
    bind *:6000
    mode tcp
    option tcp-check
    balance source
    
    server pgbouncer pgbouncer:5432 check port 5432 inter 1000 rise 2 fall 2

# Health Check Endpoints
listen health-check
    bind *:8888
    mode http
    monitor-uri /health
    
    # Custom health check logic
    http-request return status 200 content-type "application/json" string '{"status":"healthy","timestamp":"2024-01-01T00:00:00Z"}' if TRUE