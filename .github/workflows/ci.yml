name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        run: pipx install uv
      - name: Create virtualenv
        run: uv venv
      - name: Install deps
        run: uv pip install -e .[dev]
      - name: Ensure pip tooling in venv
        run: uv pip install -U pip setuptools wheel
      - name: Setup NLP models
        run: |
          uv run python -m nltk.downloader punkt
          uv run python -m spacy download en_core_web_sm
      - name: Lint (errors only)
        run: uv run ruff check .
      - name: Format
        run: uv run ruff format .
      - name: Unit tests
        run: make test
      - name: Coverage (hot paths)
        run: make coverage-hot

  memgraph-integration:
    if: contains(github.event.pull_request.labels.*.name, 'memgraph')
    runs-on: ubuntu-latest
    services:
      memgraph:
        image: memgraph/memgraph:latest
        ports:
          - 7687:7687
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install uv
        run: pipx install uv
      - name: Create virtualenv
        run: uv venv
      - name: Install deps
        run: uv pip install -e .[dev]
      - name: Wait for Memgraph
        run: |
          for i in {1..30}; do
            echo "Checking Memgraph... attempt $i"
            nc -z 127.0.0.1 7687 && echo "Memgraph is up" && exit 0
            sleep 2
          done
          echo "Memgraph failed to start" && exit 1
      - name: Run integration tests
        env:
          TEST_MEMGRAPH_URI: bolt://127.0.0.1:7687
          TEST_NEO4J_URI: bolt://127.0.0.1:7687
          TEST_NEO4J_USER: neo4j
          TEST_NEO4J_PASSWORD: password
        run: make test-integration
