"""Initial database schema

Revision ID: 001
Revises: 
Create Date: 2024-12-22 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Apply migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('subscription_tier', sa.String(length=50), nullable=False),
    sa.Column('subscription_status', sa.String(length=50), nullable=False),
    sa.Column('subscription_started_at', sa.DateTime(), nullable=False),
    sa.Column('subscription_ends_at', sa.DateTime(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('monthly_price_cents', sa.Integer(), nullable=True),
    sa.Column('monthly_content_generated', sa.Integer(), nullable=True),
    sa.Column('monthly_leads_detected', sa.Integer(), nullable=True),
    sa.Column('content_generation_limit', sa.Integer(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_index('idx_organizations_deleted_at', 'organizations', ['deleted_at'], unique=False)
    op.create_index('idx_organizations_domain', 'organizations', ['domain'], unique=False)
    op.create_index('idx_organizations_subscription_status', 'organizations', ['subscription_status'], unique=False)
    
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('job_title', sa.String(length=255), nullable=True),
    sa.Column('company_name', sa.String(length=255), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('linkedin_user_id', sa.String(length=255), nullable=True),
    sa.Column('linkedin_access_token', sa.Text(), nullable=True),
    sa.Column('linkedin_token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('linkedin_connected', sa.Boolean(), nullable=True),
    sa.Column('api_key', sa.String(length=255), nullable=True),
    sa.Column('api_key_created_at', sa.DateTime(), nullable=True),
    sa.Column('content_preferences', sa.JSON(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('organization_id', 'email', name='uq_org_email')
    )
    op.create_index('idx_users_api_key', 'users', ['api_key'], unique=False)
    op.create_index('idx_users_deleted_at', 'users', ['deleted_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_linkedin_user_id', 'users', ['linkedin_user_id'], unique=False)
    op.create_index('idx_users_organization_id', 'users', ['organization_id'], unique=False)
    
    op.create_table('content_generated',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('topic', sa.String(length=255), nullable=False),
    sa.Column('target_audience', sa.String(length=100), nullable=True),
    sa.Column('hook', sa.Text(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('call_to_action', sa.Text(), nullable=False),
    sa.Column('hashtags', sa.String(length=500), nullable=True),
    sa.Column('full_post', sa.Text(), nullable=False),
    sa.Column('character_count', sa.Integer(), nullable=True),
    sa.Column('estimated_read_time_seconds', sa.Integer(), nullable=True),
    sa.Column('engagement_prediction', sa.Float(), nullable=True),
    sa.Column('consultation_focused', sa.Boolean(), nullable=True),
    sa.Column('generation_metadata', sa.JSON(), nullable=True),
    sa.Column('posted_to_linkedin', sa.Boolean(), nullable=True),
    sa.Column('linkedin_post_id', sa.String(length=255), nullable=True),
    sa.Column('linkedin_posted_at', sa.DateTime(), nullable=True),
    sa.Column('linkedin_likes', sa.Integer(), nullable=True),
    sa.Column('linkedin_comments', sa.Integer(), nullable=True),
    sa.Column('linkedin_shares', sa.Integer(), nullable=True),
    sa.Column('linkedin_impressions', sa.Integer(), nullable=True),
    sa.Column('engagement_rate', sa.Float(), nullable=True),
    sa.Column('consultation_inquiries_generated', sa.Integer(), nullable=True),
    sa.Column('estimated_pipeline_value_cents', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('approved_by_user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_content_content_type', 'content_generated', ['content_type'], unique=False)
    op.create_index('idx_content_created_at', 'content_generated', ['created_at'], unique=False)
    op.create_index('idx_content_linkedin_post_id', 'content_generated', ['linkedin_post_id'], unique=False)
    op.create_index('idx_content_organization_id', 'content_generated', ['organization_id'], unique=False)
    op.create_index('idx_content_status', 'content_generated', ['status'], unique=False)
    op.create_index('idx_content_user_id', 'content_generated', ['user_id'], unique=False)
    
    op.create_table('leads_detected',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('source_platform', sa.String(length=50), nullable=True),
    sa.Column('source_post_id', sa.String(length=255), nullable=True),
    sa.Column('source_content_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('inquiry_type', sa.String(length=50), nullable=False),
    sa.Column('content_text', sa.Text(), nullable=False),
    sa.Column('author_name', sa.String(length=255), nullable=True),
    sa.Column('author_title', sa.String(length=255), nullable=True),
    sa.Column('author_company', sa.String(length=255), nullable=True),
    sa.Column('author_linkedin_url', sa.String(length=500), nullable=True),
    sa.Column('author_profile_info', sa.JSON(), nullable=True),
    sa.Column('lead_score', sa.Integer(), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('estimated_value_cents', sa.Integer(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('company_size', sa.String(length=100), nullable=True),
    sa.Column('technical_complexity', sa.String(length=20), nullable=True),
    sa.Column('urgency_indicators', sa.JSON(), nullable=True),
    sa.Column('follow_up_suggested', sa.Text(), nullable=True),
    sa.Column('follow_up_status', sa.String(length=50), nullable=True),
    sa.Column('follow_up_notes', sa.Text(), nullable=True),
    sa.Column('contacted_at', sa.DateTime(), nullable=True),
    sa.Column('converted_to_consultation', sa.Boolean(), nullable=True),
    sa.Column('consultation_value_cents', sa.Integer(), nullable=True),
    sa.Column('conversion_date', sa.DateTime(), nullable=True),
    sa.Column('detected_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['source_content_id'], ['content_generated.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_leads_detected_at', 'leads_detected', ['detected_at'], unique=False)
    op.create_index('idx_leads_follow_up_status', 'leads_detected', ['follow_up_status'], unique=False)
    op.create_index('idx_leads_inquiry_type', 'leads_detected', ['inquiry_type'], unique=False)
    op.create_index('idx_leads_lead_score', 'leads_detected', ['lead_score'], unique=False)
    op.create_index('idx_leads_organization_id', 'leads_detected', ['organization_id'], unique=False)
    op.create_index('idx_leads_priority', 'leads_detected', ['priority'], unique=False)
    op.create_index('idx_leads_source_platform', 'leads_detected', ['source_platform'], unique=False)
    
    op.create_table('linkedin_integrations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('organization_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(), nullable=True),
    sa.Column('linkedin_user_id', sa.String(length=255), nullable=True),
    sa.Column('profile_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(), nullable=True),
    sa.Column('sync_status', sa.String(length=50), nullable=True),
    sa.Column('sync_error_message', sa.Text(), nullable=True),
    sa.Column('total_posts', sa.Integer(), nullable=True),
    sa.Column('total_impressions', sa.Integer(), nullable=True),
    sa.Column('total_engagements', sa.Integer(), nullable=True),
    sa.Column('total_leads_generated', sa.Integer(), nullable=True),
    sa.Column('connected_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('linkedin_user_id')
    )
    op.create_index('idx_linkedin_is_active', 'linkedin_integrations', ['is_active'], unique=False)
    op.create_index('idx_linkedin_organization_id', 'linkedin_integrations', ['organization_id'], unique=False)
    op.create_index('idx_linkedin_user_id_platform', 'linkedin_integrations', ['linkedin_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Revert migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_linkedin_user_id_platform', table_name='linkedin_integrations')
    op.drop_index('idx_linkedin_organization_id', table_name='linkedin_integrations')
    op.drop_index('idx_linkedin_is_active', table_name='linkedin_integrations')
    op.drop_table('linkedin_integrations')
    op.drop_index('idx_leads_source_platform', table_name='leads_detected')
    op.drop_index('idx_leads_priority', table_name='leads_detected')
    op.drop_index('idx_leads_organization_id', table_name='leads_detected')
    op.drop_index('idx_leads_lead_score', table_name='leads_detected')
    op.drop_index('idx_leads_inquiry_type', table_name='leads_detected')
    op.drop_index('idx_leads_follow_up_status', table_name='leads_detected')
    op.drop_index('idx_leads_detected_at', table_name='leads_detected')
    op.drop_table('leads_detected')
    op.drop_index('idx_content_user_id', table_name='content_generated')
    op.drop_index('idx_content_status', table_name='content_generated')
    op.drop_index('idx_content_organization_id', table_name='content_generated')
    op.drop_index('idx_content_linkedin_post_id', table_name='content_generated')
    op.drop_index('idx_content_created_at', table_name='content_generated')
    op.drop_index('idx_content_content_type', table_name='content_generated')
    op.drop_table('content_generated')
    op.drop_index('idx_users_organization_id', table_name='users')
    op.drop_index('idx_users_linkedin_user_id', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_deleted_at', table_name='users')
    op.drop_index('idx_users_api_key', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_organizations_subscription_status', table_name='organizations')
    op.drop_index('idx_organizations_domain', table_name='organizations')
    op.drop_index('idx_organizations_deleted_at', table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###